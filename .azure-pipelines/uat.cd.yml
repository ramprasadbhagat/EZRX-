# Deploy to testflight IOS Service
# Build and push UAT binary to IOS testflight

trigger:
  tags:
    include:
    - uat.*

resources:
- repo: self

pool:
  vmImage: 'macos-13'

variables:
  - group: "eZRx plus CICD"

stages:
- stage: IOSUatStage
  dependsOn: []
  displayName: IOSUatStage
  jobs:

  - job: IOSUatJob
    displayName: IOSUatJob
    steps:

    - task: InstallAppleCertificate@2
      displayName: Install Apple Certificate P12 file
      inputs:
        certSecureFile: 'Certificates.p12'
        certPwd: '$(P12_PASSWORD)'
        keychain: 'temp'
        deleteCert: true

    - task: InstallAppleProvisioningProfile@1
      displayName: Install Apple Provisioning Profile
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'AppStore_com.zuelligpharma.ezrxplus.uat.mobileprovision'
        removeProfile: true

    - task: Bash@3
      displayName: flutter setup
      inputs:
        targetType: 'inline'
        script: |
          brew tap leoafarias/fvm
          brew install fvm
          echo Y | fvm global 3.22.1
          fvm flutter clean
          cd ios
          rm -rf Pods
          rm Podfile.lock
          fvm flutter pub get
          pod install
          cd ..

    - task: Bash@3
      displayName: build IOS Uat
      inputs:
        targetType: 'inline'
        script: |
          fvm flutter build ipa --flavor uat -t lib/main_uat.dart --release --export-options-plist=ios/config/uat/exportOptions.plist

    - task: Bash@3
      displayName: 'Install Firebase Tools'
      inputs:
        targetType: 'inline'
        script: 'curl -sL firebase.tools | bash'
        workingDirectory: '$(Agent.ToolsDirectory)'

    - task: Bash@3
      displayName: 'Upload IPA to Firebase'
      continueOnError: true
      inputs:
        targetType: 'inline'
        script: |
          firebase appdistribution:distribute *.ipa \
          --app "$(FIREBASE_UAT_IOS_APP_ID)" \
          --token "$(FIREBASE_CI_TOKEN)" \
          --release-notes "eZRx+ UAT IOS"
        workingDirectory: 'build/ios/ipa'

    - task: AppStoreRelease@1
      displayName: 'Upload to the App Store TestFlight track'
      inputs:
        authType: 'ApiKey'
        apiKeyId: '$(APPSTORECONNECT_API_KEY_ID)'
        apiKeyIssuerId: '$(APPSTORECONNECT_API_KEY_ISSUER_ID)'
        apitoken: '$(APPSTORECONNECT_API_TOKEN_BASE64)'
        apiKeyInHouse: false
        appIdentifier: '$(APP_PACKAGE_NAME_UAT)'
        appType: 'iOS'
        releaseTrack: 'TestFlight'
        ipaPath: 'build/ios/ipa/*.ipa'
        shouldSkipWaitingForProcessing: true
        shouldSkipSubmission: true


- stage: AndroidUatStage
  dependsOn: []
  displayName: AndroidUatStage
  jobs:

  - job: AndroidUatJob
    displayName: AndroidUatJob
    steps:

    - task: DownloadSecureFile@1
      name: localprop
      displayName: Download local properties file
      inputs:
        secureFile: 'local.properties'

    - task: DownloadSecureFile@1
      name: keyprop
      displayName: Download key properties file
      inputs:
        secureFile: 'key.properties'

    - task: DownloadSecureFile@1
      name: key
      displayName: Download signing key
      inputs:
        secureFile: 'ezrxplusuat.jks'

    - task: DownloadSecureFile@1
      name: serviceAccountKey
      displayName: Download Google Service Account Key
      inputs:
        secureFile: 'ezrx_devops_pipeline.json'

    - task: Bash@3
      displayName: Copy config files
      inputs:
        targetType: 'inline'
        script: |
          cp $(localprop.secureFilePath) $(Build.SourcesDirectory)/android/local.properties
          cp $(keyprop.secureFilePath) $(Build.SourcesDirectory)/android/key.properties
          cp $(key.secureFilePath) $(Build.SourcesDirectory)/android/app/ezrxkey.jks
          cp $(serviceAccountKey.secureFilePath) $(Build.SourcesDirectory)/android/serviceAccountKey.json

          echo "local.properties copied to $(Build.SourcesDirectory)/android/local.properties"
          echo "key.properties copied to $(Build.SourcesDirectory)/android/key.properties"
          echo "key.jks copied to $(Build.SourcesDirectory)/android/app/ezrxkey.jks"

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Bash@3
      displayName: flutter setup
      inputs:
        targetType: 'inline'
        script: |
          brew tap leoafarias/fvm
          brew install fvm
          echo Y | fvm global 3.22.1
          fvm flutter pub get

    - task: Bash@3
      displayName: build Android Uat
      inputs:
        targetType: 'inline'
        script: |
          fvm flutter build appbundle --flavor uat -t lib/main_uat.dart --release

    - task: Bash@3
      displayName: 'Install Firebase Tools'
      inputs:
        targetType: 'inline'
        script: 'curl -sL firebase.tools | bash'
        workingDirectory: '$(Agent.ToolsDirectory)'

    - task: Bash@3
      displayName: 'Upload AAB to Firebase'
      continueOnError: true
      inputs:
        targetType: 'inline'
        script: |
          firebase appdistribution:distribute *.aab \
          --app "$(FIREBASE_UAT_ANDROID_APP_ID)" \
          --token "$(FIREBASE_CI_TOKEN)" \
          --groups "$(FIREBASE_UAT_TESTER_GROUP)" \
          --release-notes "eZRx+ UAT Android"
        workingDirectory: 'build/app/outputs/bundle/uatRelease'

    - task: AppCenterDistribute@3
      displayName: Upload to Microsoft Appcenter eZRx Uat
      continueOnError: true
      inputs:
        serverEndpoint: 'eZRx+ Uat Appcenter'
        appSlug: '$(APPCENTER_APP_SLUG_UAT)'
        appFile: 'build/app/outputs/bundle/uatRelease/*.aab'
        destinationType: 'groups'
        destinationGroupIds: '$(APPCENTER_DESTINATION_GROUP_IDS_UAT)'
        releaseNotesInput: 'uat release'
        isSilent: true

    - task: GooglePlayRelease@4
      displayName: Upload to Google Play console internal test track
      inputs:
        authType: 'JsonFile'
        serviceAccountKey: '$(Build.SourcesDirectory)/android/serviceAccountKey.json'
        applicationId: '$(APP_PACKAGE_NAME_UAT)'
        action: 'SingleBundle'
        bundleFile: 'build/app/outputs/bundle/uatRelease/*.aab'
        track: 'internal'
        rolloutToUserFraction: true


# - stage: WebUatStage
#   dependsOn: []
#   displayName: WebUatStage
#   jobs:

#   - job: WebUatJob
#     displayName: WebUatJob
#     steps:

#     - task: Bash@3
#       displayName: flutter & firebase setup
#       inputs:
#         targetType: 'inline'
#         script: |
#           brew tap leoafarias/fvm
#           brew install fvm
#           echo Y | fvm global 3.22.1
#           fvm flutter pub get
#           brew install firebase-cli

#     - task: Bash@3
#       displayName: build Web Uat and upload to firebase hosting
#       inputs:
#         targetType: 'inline'
#         script: |
#           fvm flutter build web -t lib/main_uat.dart --release
#           firebase deploy --token "$(FIREBASE_UAT_TOKEN)"


- stage: MSTeamsNotificationStage
  dependsOn: [IOSUatStage,AndroidUatStage]
  displayName: MSTeamsNotificationStage
  jobs:
  - job: MSTeamsNotificationUatJob
    displayName: MSTeamsNotificationUatJob
    steps:
    - task: Bash@3
      displayName: Extract build version and number then Share with the Microsoft team channel
      inputs:
        targetType: 'inline'
        script: |
          STR=$(yq '.version' pubspec.yaml)
          VERSION=$( echo $STR | cut -d '+' -f 1 )
          BUILD=$( echo $STR | cut -d '+' -f 2 )
          TITLE="UAT eZRx+ $( echo $VERSION )($( echo $BUILD ))"
          curl --location --request POST '$(MICROSOFT_TEAMS_BUILD_CHANNEL)' \
          --header 'Content-Type: text/plain' \
          --data-raw '{
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "summary": "New eZRx mobile UAT build ready",
            "sections": [{
              "activityTitle": "'"$TITLE"'",
                "markdown": true
              }],
            "potentialAction": [{
              "@type": "ActionCard",
              "name": "Build url",
              "actions": [{
                "@type": "OpenUri",
                "name": "Android",
                "targets": [
                  { "os": "default", "uri": "https://appdistribution.firebase.google.com/testerapps/$(FIREBASE_UAT_ANDROID_APP_ID)" }
                ]
              },
              {
                "@type": "OpenUri",
                "name": "IOS",
                "targets": [
                  { "os": "default", "uri": "https://appdistribution.firebase.google.com/testerapps/$(FIREBASE_UAT_IOS_APP_ID)" }
                ]
              }]
            }]
          }'
      env:
        FIREBASE_UAT_ANDROID_APP_ID: '$(FIREBASE_UAT_ANDROID_APP_ID)'
        FIREBASE_UAT_IOS_APP_ID: '$(FIREBASE_UAT_IOS_APP_ID)'
        MICROSOFT_TEAMS_BUILD_CHANNEL: '$(MICROSOFT_TEAMS_BUILD_CHANNEL)'