def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion  flutter.compileSdkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
        applicationId "com.zuelligpharma.ezrxplus"
        minSdkVersion localProperties.getProperty('flutter.minSdkVersion').toInteger()
        targetSdkVersion localProperties.getProperty('flutter.targetSdkVersion').toInteger()
        compileSdkVersion localProperties.getProperty('flutter.compileSdkVersion').toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"

    productFlavors {
        mock {
            dimension "env"
            // versionNameSuffix "-mock"
            applicationIdSuffix ".mock"
            resValue "string", "clevertap_account_id", "TEST-464-R68-876Z"
            resValue "string", "clevertap_token", "TEST-b62-464"
            resValue "string", "app_name", "eZRx+ Mock"
            manifestPlaceholders += [appAuthRedirectScheme: "com.okta.zuellig-ciam"]
        }

        dev {
            dimension "env"
            // versionNameSuffix "-dev"
            applicationIdSuffix ".dev"
            resValue "string", "clevertap_account_id", "TEST-464-R68-876Z"
            resValue "string", "clevertap_token", "TEST-b62-464"
            resValue "string", "app_name", "eZRx+ Dev"
            manifestPlaceholders += [appAuthRedirectScheme: "com.okta.zuellig-ciam"]
        }

        uat {
            dimension "env"
            // versionNameSuffix "-uat"
            applicationIdSuffix ".uat"
            resValue "string", "clevertap_account_id", "TEST-798-WW8-476Z"
            resValue "string", "clevertap_token", "TEST-b00-bca"
            resValue "string", "app_name", "eZRx+ Uat"
            manifestPlaceholders += [appAuthRedirectScheme: "com.okta.zuellig-ciam"]
        }

        prod {
            dimension "env"
            resValue "string", "clevertap_account_id", "698-WW8-476Z"
            resValue "string", "clevertap_token", "b00-bc6"
            resValue "string", "app_name", "eZRx+"
            manifestPlaceholders += [appAuthRedirectScheme: "com.okta.zuellig-ciam"]
        }

    }
    namespace 'com.zuelligpharma.ezrxplus'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'androidx.core:core:1.3.0'
    implementation 'androidx.fragment:fragment:1.3.6'
    implementation "com.clevertap.android:push-templates:1.1.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    //Optional ExoPlayer Libraries for Audio/Video Inbox Messages. Audio/Video messages will be dropped without these dependencies
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'

	testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// This must appear at the bottom of the file
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'